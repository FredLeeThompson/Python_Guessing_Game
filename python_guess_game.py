# -*- coding: utf-8 -*-
"""Python_Guess_Game

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13qJbpQFNYXB2Mdghfx2of5Vxf6IxMprQ
"""



#A library algoritm for our guessing game.
import random


print("Welcome to Fred's Guessing Game, created with Python!")
print("You have 6 attempts at guessing letters that are a part of a word!")
print("After 6 tries IT'S OVER!")


def get_guess():

  #Set dashes to length of hidden word and set remaining tries.
  #We will choose 5.
  dashes = "-" * len(secret_word)
  guesses_left = 5

  #This will loop as long as BOTH conditions are true:
  #1. The number of guesses left is greater than -1.
  #2. The dash string does NOT equal the secret word.
  while guesses_left > -1 and not dashes == secret_word:

    #Print the amount of dashes and guesses left.
    print(dashes)
    print("Guesses Left: " + str(guesses_left))

    #Ask user for input
    guess = input("Guess:")

    #Conditions that will print a message to wrong guesses.
    if len(guess) != 1:
      print("Your guess must have exactly one character!")

    #Create elif to setup game guidelines.
    elif guess in secret_word:
      print("That letter is in the secret word!")
      dashes = update_dashes(secret_word, dashes, guess)

   #Otherwise, if guess is wrong then we display a message and
   #subtract the dashes by 1.
    else:
      print("That letter is not in the secret word!")
      guesses_left -= 1
    
  if guesses_left < 0:
    print("You lose! Out of guesses. The word was: " + str(secret_word))

  #If the dash string equals the secret word in the end then the
  #user wins
  else:
    print("Congrats! You win. The word was: " + str(secret_word))

#This function updates the string of dashes by replacing them
#with words that match up with the hidden word if the player
#is correct.
def update_dashes(secret, cur_dash, rec_guess):
  result=""

  for i in range(len(secret)):
    if secret[i] == rec_guess:
      result = result + rec_guess

    else:
      #Add the dash at index i to result if it doesn't match the guess
      result = result + cur_dash[i]

  return result

words = ["Win", "Lose", "Draw"]

secret_word = random.choice(words)
get_guess()